// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: document.sql

package dbsqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const documentFindById = `-- name: DocumentFindById :one
SELECT id, content, created_at
FROM documents
WHERE id = $1
`

func (q *Queries) DocumentFindById(ctx context.Context, db DBTX, id pgtype.UUID) (*Document, error) {
	row := db.QueryRow(ctx, documentFindById, id)
	var i Document
	err := row.Scan(&i.ID, &i.Content, &i.CreatedAt)
	return &i, err
}

const documentInsert = `-- name: DocumentInsert :one
INSERT INTO documents (
    content
) VALUES (
    $1
) RETURNING id, content, created_at
`

func (q *Queries) DocumentInsert(ctx context.Context, db DBTX, content []byte) (*Document, error) {
	row := db.QueryRow(ctx, documentInsert, content)
	var i Document
	err := row.Scan(&i.ID, &i.Content, &i.CreatedAt)
	return &i, err
}
