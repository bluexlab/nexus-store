// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: s3_object.sql

package dbsqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const s3ObjectFindById = `-- name: S3ObjectFindById :one
SELECT id, bucket, key, created_at
FROM s3_objects
WHERE id = $1
`

func (q *Queries) S3ObjectFindById(ctx context.Context, db DBTX, id pgtype.UUID) (*S3Object, error) {
	row := db.QueryRow(ctx, s3ObjectFindById, id)
	var i S3Object
	err := row.Scan(
		&i.ID,
		&i.Bucket,
		&i.Key,
		&i.CreatedAt,
	)
	return &i, err
}

const s3ObjectInsert = `-- name: S3ObjectInsert :one
INSERT INTO s3_objects (
    bucket,
    key
) VALUES (
    $1,
    $2
) RETURNING id, bucket, key, created_at
`

type S3ObjectInsertParams struct {
	Bucket string
	Key    string
}

func (q *Queries) S3ObjectInsert(ctx context.Context, db DBTX, arg *S3ObjectInsertParams) (*S3Object, error) {
	row := db.QueryRow(ctx, s3ObjectInsert, arg.Bucket, arg.Key)
	var i S3Object
	err := row.Scan(
		&i.ID,
		&i.Bucket,
		&i.Key,
		&i.CreatedAt,
	)
	return &i, err
}
